{"view_size":[3900,2700],"cps":[[150,90],[450,90],[750,90],[1050,90],[1350,90],[1650,90],[1950,90],[2250,90],[2550,90],[2850,90],[3150,90],[3450,90],[3750,90],[150,270],[450,270],[750,270],[1050,270],[1350,270],[1650,270],[1950,270],[2250,270],[2550,270],[2850,270],[3150,270],[3450,270],[3750,270],[150,450],[450,450],[750,450],[1050,450],[1350,450],[1650,450],[1950,450],[2250,450],[2550,450],[2850,450],[3150,450],[3450,450],[3750,450],[150,630],[450,630],[750,630],[1050,630],[1350,630],[1650,630],[1950,630],[2250,630],[2550,630],[2850,630],[3150,630],[3450,630],[3750,630],[150,810],[450,810],[750,810],[1050,810],[1350,810],[1650,810],[1950,810],[2250,810],[2550,810],[2850,810],[3150,810],[3450,810],[3750,810],[150,990],[450,990],[750,990],[1050,990],[1350,990],[1650,990],[1950,990],[2250,990],[2550,990],[2850,990],[3150,990],[3450,990],[3750,990],[150,1170],[450,1170],[750,1170],[1050,1170],[1350,1170],[1650,1170],[1950,1170],[2250,1170],[2550,1170],[2850,1170],[3150,1170],[3450,1170],[3750,1170],[150,1350],[450,1350],[750,1350],[1050,1350],[1350,1350],[1650,1350],[1950,1350],[2250,1350],[2550,1350],[2850,1350],[3150,1350],[3450,1350],[3750,1350],[150,1530],[450,1530],[750,1530],[1050,1530],[1350,1530],[1650,1530],[1950,1530],[2250,1530],[2550,1530],[2850,1530],[3150,1530],[3450,1530],[3750,1530],[150,1710],[450,1710],[750,1710],[1050,1710],[1350,1710],[1650,1710],[1950,1710],[2250,1710],[2550,1710],[2850,1710],[3150,1710],[3450,1710],[3750,1710],[150,1890],[450,1890],[750,1890],[1050,1890],[1350,1890],[1650,1890],[1950,1890],[2250,1890],[2550,1890],[2850,1890],[3150,1890],[3450,1890],[3750,1890],[150,2070],[450,2070],[750,2070],[1050,2070],[1350,2070],[1650,2070],[1950,2070],[2250,2070],[2550,2070],[2850,2070],[3150,2070],[3450,2070],[3750,2070],[150,2250],[450,2250],[750,2250],[1050,2250],[1350,2250],[1650,2250],[1950,2250],[2250,2250],[2550,2250],[2850,2250],[3150,2250],[3450,2250],[3750,2250],[150,2430],[450,2430],[750,2430],[1050,2430],[1350,2430],[1650,2430],[1950,2430],[2250,2430],[2550,2430],[2850,2430],[3150,2430],[3450,2430],[3750,2430],[150,2610],[450,2610],[750,2610],[1050,2610],[1350,2610],[1650,2610],[1950,2610],[2250,2610],[2550,2610],[2850,2610],[3150,2610],[3450,2610],[3750,2610]],"crsList":[{"key":"27","ref":null,"props":{"keyFromParent":27,"crs_id":"CS107E","name":"Computer Systems from the Ground Up.","description":"Introduction to the fundamental concepts of computer systems through bare metal programming on the Raspberry Pi. Explores how five concepts come together in computer systems: hardware, architecture, assembly code, the C language, and software development tools. Students do all programming with a Raspberry Pi kit and several add-ons (LEDs, buttons). Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, compilation, memory organization and management, debugging, hardware, and I/O. Prerequisite: 106B or X, and consent of instructor. There is a $75 required course fee.","prerequisites":["CS106B","CS106X"],"cp":[450,450],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"119","ref":null,"props":{"keyFromParent":119,"crs_id":"CS108","name":"Object-Oriented Systems Design.","description":"Software design and construction in the context of large OOP libraries. Taught in Java. Topics: OOP design, design patterns, testing, graphical user interface (GUI) OOP libraries, software engineering strategies, approaches to programming in teams. Prerequisite: 107.","prerequisites":["CS107"],"cp":[750,1710],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"13","ref":null,"props":{"keyFromParent":"13","crs_id":"CS109","name":"Introduction to Probability for Computer Scientists.","description":"Topics include: counting and combinatorics, random variables, conditional probability, independence, distributions, expectation, point estimation, and limit theorems. Applications of probability in computer science including machine learning and the use of probability in the analysis of algorithms. Prerequisites: 103, 106B or X, multivariate calculus at the level of MATH 51 or CME 100 or equivalent.","prerequisites":["CS103","CS106B","CS106X","MATH51","CME100"],"cp":[150,270],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"53","ref":null,"props":{"keyFromParent":53,"crs_id":"CS110","name":"Principles of Computer Systems.","description":"Principles and practice of engineering of computer software and hardware systems. Topics include: techniques for controlling complexity; strong modularity using client-server design, virtual memory, and threads; networks; atomicity and coordination of parallel activities. Prerequisite: 107.","prerequisites":["CS107"],"cp":[450,810],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"111","ref":null,"props":{"keyFromParent":111,"crs_id":"CS124","name":"From Languages to Information.","description":"Extracting meaning, information, and structure from human language text, speech, web pages, social networks. Introducing methods (string algorithms, edit distance, language modeling, machine learning classifiers, neural embeddings, inverted indices, collaborative filtering, PageRank), applications (chatbots, sentiment analysis, information retrieval, question answering, text classification, social networks, recommender systems), and ethical issues in both. Prerequisites: CS103, CS107, CS109.Same as: LINGUIST 180, LINGUIST 280","prerequisites":["CS103","CS107","CS109"],"cp":[2250,1530],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"150","ref":null,"props":{"keyFromParent":150,"crs_id":"CS131","name":"Computer Vision: Foundations and Applications.","description":"Robots that can navigate space and perform duties, search engines that can index billions of images and videos, algorithms that can diagnose medical images for diseases, or smart cars that can see and drive safely: Lying in the heart of these modern AI applications are computer vision technologies that can perceive, understand and reconstruct the complex visual world. This course is designed for students who are interested in learning about the fundamental principles and important applications of computer vision. Course will introduce a number of fundamental concepts in computer vision and expose students to a number of real-world applications, plus guide students through a series of projects such that they will get to implement cutting-edge computer vision algorithms. Prerequisites: Students should be familiar with Python (i.e. have programmed in Python before) and Linux; plus Calculus & Linear Algebra.","prerequisites":[""],"cp":[2250,2070],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"66","ref":null,"props":{"keyFromParent":66,"crs_id":"CS140","name":"Operating Systems and Systems Programming.","description":"Operating systems design and implementation. Basic structure; synchronization and communication mechanisms; implementation of processes, process management, scheduling, and protection; memory organization and management, including virtual memory; I/O device management, secondary storage, and file systems. Prerequisite: CS 110.","prerequisites":["CS110"],"cp":[450,990],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"85","ref":null,"props":{"keyFromParent":85,"crs_id":"CS144","name":"Introduction to Computer Networking.","description":"Principles and practice. Structure and components of computer networks, packet switching, layered architectures. Applications: web/http, voice-over-IP, p2p file sharing and socket programming. Reliable transport: TCP/IP, reliable transfer, flow control, and congestion control. The network layer: names and addresses, routing. Local area networks: ethernet and switches. Wireless networks and network security. Prerequisite: CS 110.","prerequisites":["CS110"],"cp":[2250,1170],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"42","ref":null,"props":{"keyFromParent":42,"crs_id":"CS145","name":"Data Management and Data Systems.","description":"Introduction to the use, design, and implementation of database and data-intensive systems, including data models; schema design; data storage; query processing, query optimization, and cost estimation; concurrency control, transactions, and failure recovery; distributed and parallel execution; semi-structured databases; and data system support for advanced analytics and machine learning. Prerequisites: 103 and 107 (or equivalent).","prerequisites":["CS103","CS107"],"cp":[1050,630],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"141","ref":null,"props":{"keyFromParent":141,"crs_id":"CS148","name":"Introduction to Computer Graphics and Imaging.","description":"Introductory prerequisite course in the computer graphics sequence introducing students to the technical concepts behind creating synthetic computer generated images. Begins with OpenGL/scanline rendering including discussions of underlying mathematical concepts including triangles, normals, interpolation, texture/bump mapping, etc. Importantly, the course will discuss handling light/color for image formats, computer displays, printers, etc., as well as how light interacts with the environment, constructing engineering models such as the BRDF, and various simplifications into more basic lighting and shading models. Ray tracing is introduced and compared to real world cameras to illustrate various concepts, and both anti-aliasing and acceleration structures are discussed. The final class mini-project consists of building out a ray tracer to create visually compelling images. Starter codes and code bits will be provided to aid in development, but this class focuses on what you can do with the code as opposed to what the code itself looks like. Therefore grading is weighted toward in person \"demos\" of the code in action - creativity and the production of impressive visual imagery are highly encouraged/rewarded. Prerequisites: CS 107, MATH 51.","prerequisites":["CS107","MATH51"],"cp":[3450,1890],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"185","ref":null,"props":{"keyFromParent":"185","crs_id":"CS149","name":"Parallel Computing.","description":"This course is an introduction to parallelism and parallel programming. Most new computer architectures are parallel; programming these machines requires knowledge of the basic issues of and techniques for writing parallel software. Topics: varieties of parallelism in current hardware (e.g., fast networks, multicore, accelerators such as GPUs, vector instruction sets), importance of locality, implicit vs. explicit parallelism, shared vs. non-shared memory, synchronization mechanisms (locking, atomicity, transactions, barriers), and parallel programming models (threads, data parallel/streaming, MapReduce, Apache Spark, SPMD, message passing, SIMT, transactions, and nested parallelism). Significant parallel programming assignments will be given as homework. The course is open to students who have completed the introductory CS course sequence through 110.","prerequisites":[""],"cp":[1050,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"56","ref":null,"props":{"keyFromParent":56,"crs_id":"CS103","name":"Mathematical Foundations of Computing.","description":"What are the theoretical limits of computing power? What problems can be solved with computers? Which ones cannot? And how can we reason about the answers to these questions with mathematical certainty? This course explores the answers to these questions and serves as an introduction to discrete mathematics, computability theory, and complexity theory. At the completion of the course, students will feel comfortable writing mathematical proofs, reasoning about discrete structures, reading and writing statements in first-order logic, and working with mathematical models of computing devices. Throughout the course, students will gain exposure to some of the most exciting mathematical and philosophical ideas of the late nineteenth and twentieth centuries. Specific topics covered include formal mathematical proofwriting, propositional and first-order logic, set theory, binary relations, functions (injections, surjections, and bijections), cardinality, basic graph theory, the pigeonhole principle, mathematical induction, finite automata, regular expressions, the Myhill-Nerode theorem, context-free grammars, Turing machines, decidable and recognizable languages, self-reference and undecidability, verifiers, and the P versus NP question. Students with significant proofwriting experience are encouraged to instead take CS154. Students interested in extra practice and support with the course are encouraged to concurrently enroll in CS103A. Prerequisite: CS106B or equivalent. CS106B may be taken concurrently with CS103.","prerequisites":["CS106B"],"cp":[1350,810],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"3","ref":null,"props":{"keyFromParent":3,"crs_id":"CS106A","name":"Programming Methodology.","description":"Introduction to the engineering of computer applications emphasizing modern software engineering principles: program design, decomposition, encapsulation, abstraction, and testing. Emphasis is on good programming style and the built-in facilities of respective languages. Uses the Python programming language. No prior programming experience required. Summer quarter enrollment is limited.","prerequisites":[""],"cp":[1050,90],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"16","ref":null,"props":{"keyFromParent":16,"crs_id":"CS106B","name":"Programming Abstractions.","description":"Abstraction and its relation to programming. Software engineering principles of data abstraction and modularity. Object-oriented programming, fundamental data structures (such as stacks, queues, sets) and data-directed design. Recursion and recursive data structures (linked lists, trees, graphs). Introduction to time and space complexity analysis. Uses the programming language C++ covering its basic facilities. Prerequisite: 106A or equivalent.","prerequisites":["CS106A"],"cp":[1050,270],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"15","ref":null,"props":{"keyFromParent":15,"crs_id":"CS106X","name":"Programming Abstractions.(Honor)","description":"Intensive version of 106B for students with a strong programming background interested in a rigorous treatment of the topics at an accelerated pace. Significant amount of additional advanced material and substantially more challenging projects. Some projects may relate to CS department research. Prerequisite: excellence in 106A or equivalent, or consent of instructor.Same as: Accelerated","prerequisites":["CS106A"],"cp":[750,270],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"40","ref":null,"props":{"keyFromParent":40,"crs_id":"CS107","name":"Computer Organization and Systems.","description":"Introduction to the fundamental concepts of computer systems. Explores how computer systems execute programs and manipulate data, working from the C programming language down to the microprocessor. Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, elements of code compilation, memory organization and management, and performance evaluation and optimization. Prerequisites: 106B or X, or consent of instructor.","prerequisites":["CS106B","CS106X"],"cp":[450,630],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"118","ref":null,"props":{"keyFromParent":118,"crs_id":"CS147","name":"Introduction to Human-Computer Interaction Design.","description":"Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics: user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: work with a team on a quarter-long design project, supported by lectures, readings, and studios. Prerequisite: 106B or X or equivalent programming experience. Recommended that CS Majors have also taken one of 142, 193P, or 193A.","prerequisites":["CS106B","CS106X","CS142","CS193P","CS193A"],"cp":[450,1710],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"70","ref":null,"props":{"keyFromParent":70,"crs_id":"CS154","name":"Introduction to Automata and Complexity Theory.","description":"This course provides a mathematical introduction to the following questions: What is computation? Given a computational model, what problems can we hope to solve in principle with this model? Besides those solvable in principle, what problems can we hope to efficiently solve? In many cases we can give completely rigorous answers; in other cases, these questions have become major open problems in computer science and mathematics. By the end of this course, students will be able to classify computational problems in terms of their computational complexity (Is the problem regular? Not regular? Decidable? Recognizable? Neither? Solvable in P? NP-complete? PSPACE-complete?, etc.). Students will gain a deeper appreciation for some of the fundamental issues in computing that are independent of trends of technology, such as the Church-Turing Thesis and the P versus NP problem. Prerequisites: CS 103 or 103B.","prerequisites":["CS103","CS103B"],"cp":[1650,990],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"32","ref":null,"props":{"keyFromParent":32,"crs_id":"CS151","name":"Logic Programming.","description":"Logic Programming is a style of programming based on symbolic logic. In writing a logic program, the programmer describes the application area of the program (as a set of logical sentences) without reference to the internal data structures or operations of the system executing the program. In this regard, a logic program is more of a specification than an implementation; and logic programs are often called runnable specifications. This course introduces basic logic programming theory, current technology, and examples of common applications, notably deductive databases, logical spreadsheets, enterprise management, computational law, and game playing. Work in the course takes the form of readings and exercises, weekly programming assignments, and a term-long project. Prerequisite: CS 106B or equivalent.","prerequisites":["CS106B"],"cp":[1950,450],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"54","ref":null,"props":{"keyFromParent":54,"crs_id":"CS155","name":"Computer and Network Security.","description":"For seniors and first-year graduate students. Principles of computer systems security. Attack techniques and how to defend against them. Topics include: network attacks and defenses, operating system security, application security (web, apps, databases), malware, privacy, and security for mobile devices. Course projects focus on building reliable code. Prerequisite: 110. Recommended: basic Unix.","prerequisites":["CS110"],"cp":[750,810],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"23","ref":null,"props":{"keyFromParent":"23","crs_id":"CS157","name":"Computational Logic.","description":"Rigorous introduction to Symbolic Logic from a computational perspective. Encoding information in the form of logical sentences. Reasoning with information in this form. Overview of logic technology and its applications - in mathematics, science, engineering, business, law, and so forth. Topics include the syntax and semantics of Propositional Logic, Relational Logic, and Herbrand Logic, validity, contingency, unsatisfiability, logical equivalence, entailment, consistency, natural deduction (Fitch), mathematical induction, resolution, compactness, soundness, completeness.","prerequisites":[""],"cp":[3150,270],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"47","ref":null,"props":{"keyFromParent":"47","crs_id":"CS161","name":"Design and Analysis of Algorithms.","description":"Worst and average case analysis. Recurrences and asymptotics. Efficient algorithms for sorting, searching, and selection. Data structures: binary search trees, heaps, hash tables. Algorithm design techniques: divide-and-conquer, dynamic programming, greedy algorithms, amortized analysis, randomization. Algorithms for fundamental graph problems: minimum-cost spanning tree, connected components, topological sort, and shortest paths. Possible additional topics: network flow, string searching. Prerequisite: 103 or 103B; 109 or STATS 116.","prerequisites":["CS103","CS103B","CS109","STATS116"],"cp":[2550,630],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"164","ref":null,"props":{"keyFromParent":164,"crs_id":"CS224U","name":"Natural Language Understanding.","description":"Project-oriented class focused on developing systems and algorithms for robust machine understanding of human language. Draws on theoretical concepts from linguistics, natural language processing, and machine learning. Topics include lexical semantics, distributed representations of meaning, relation extraction, semantic parsing, sentiment analysis, and dialogue agents, with special lectures on developing projects, presenting research results, and making connections with industry. Prerequisites: one of LINGUIST 180, CS 124, CS 224N, CS224S, or CS221.Same as: LINGUIST 188, LINGUIST 288","prerequisites":["LINGUIST180","SC124","CS224N","CS224S","CS221"],"cp":[2550,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"189","ref":null,"props":{"keyFromParent":189,"crs_id":"CS224W","name":"Machine Learning with Graphs.","description":"Networks are a fundamental tool for modeling complex social, technological, and biological systems. Coupled with the emergence of online social networks and large-scale data availability in biological sciences, this course focuses on the analysis of massive networks which provide several computational, algorithmic, and modeling challenges. Students are introduced to machine learning techniques and data mining tools apt to reveal insights on the social, technological, and natural worlds, by means of studying their underlying network structure and interconnections. Topics include: robustness and fragility of food webs and financial markets; algorithms for the World Wide Web; graph neural networks and representation learning; identification of functional modules in biological networks; disease outbreak detection.","prerequisites":[""],"cp":[2250,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"159","ref":null,"props":{"keyFromParent":159,"crs_id":"CS227B","name":"General Game Playing.","description":"A general game playing system accepts a formal description of a game to play it without human intervention or algorithms designed for specific games. Hands-on introduction to these systems and artificial intelligence techniques such as knowledge representation, reasoning, learning, and rational behavior. Students create GGP systems to compete with each other and in external competitions. Prerequisite: programming experience. Recommended: 103 or equivalent.","prerequisites":["CS103"],"cp":[1050,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"120","ref":null,"props":{"keyFromParent":120,"crs_id":"CS228","name":"Probabilistic Graphical Models: Principles and Techniques.","description":"Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.","prerequisites":[""],"cp":[1050,1710],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"122","ref":null,"props":{"keyFromParent":122,"crs_id":"CS229","name":"Machine Learning.","description":"Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, deep learning, model/feature selection, learning theory, ML advice, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.Same as: STATS 229","prerequisites":[""],"cp":[1650,1710],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"100","ref":null,"props":{"keyFromParent":"100","crs_id":"CS205L","name":"Continuous Mathematical Methods with an Emphasis on Machine Learning.","description":"A survey of numerical approaches to the continuous mathematics with emphasis on machine and deep learning. Although motivated from the standpoint of machine learning, the course will focus on the underlying mathematical methods including computational linear algebra and optimization, as well as special topics related to training/using neural networks including automatic differentiation via backward propagation, steepest/gradient decent, momentum methods and adaptive time stepping for ordinary differential equations, etc. Students have the option of doing written homework and either a take-home or in class exams with no programming required, or may skip the exams and instead do a programming project. (Replaces CS205A, and satisfies all similar requirements.) Prerequisites: MATH 51; MATH 104 or 113 or equivalent or comfortable with the associated material.","prerequisites":["MATH51","MATH104","MATH113"],"cp":[2850,1350],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"95","ref":null,"props":{"keyFromParent":"95","crs_id":"CS221","name":"Artificial Intelligence: Principles and Techniques.","description":"Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling. This course focuses on the foundational concepts that drive these applications. In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms). Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).","prerequisites":["CS103","CS103B","CS103X","CS106B","CS106X","CS107","CS109"],"cp":[1350,1350],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"90","ref":null,"props":{"keyFromParent":90,"crs_id":"CS223A","name":"Introduction to Robotics.","description":"Robotics foundations in modeling, design, planning, and control. Class covers relevant results from geometry, kinematics, statics, dynamics, motion planning, and control, providing the basic methodologies and tools in robotics research and applications. Concepts and models are illustrated through physical robot platforms, interactive robot simulations, and video segments relevant to historical research developments or to emerging application areas in the field. Recommended: matrix algebra.Same as: ME 320","prerequisites":[""],"cp":[3750,1170],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"151","ref":null,"props":{"keyFromParent":151,"crs_id":"CS224N","name":"Natural Language Processing with Deep Learning.","description":"Methods for processing human language information and the underlying computational properties of natural languages. Focus on deep learning approaches: understanding, implementing, training, debugging, visualizing, and extending neural network models for a variety of language understanding tasks. Exploration of natural language tasks ranging from simple word level and syntactic processing to coreference, question answering, and machine translation. Examination of representative papers and systems and completion of a final project applying a complex neural network model to a large-scale NLP problem. Prerequisites: calculus and linear algebra; CS124 or CS121/221.Same as: LINGUIST 284","prerequisites":["CS124","CS121","CS221"],"cp":[2550,2070],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"152","ref":null,"props":{"keyFromParent":"152","crs_id":"CS224S","name":"Spoken Language Processing.","description":"Introduction to spoken language technology with an emphasis on dialogue and conversational systems. Deep learning and other methods for automatic speech recognition, speech synthesis, affect detection, dialogue management, and applications to digital assistants and spoken language understanding systems. Prerequisites: CS 124, CS 221, CS 224N, or CS 229.Same as: LINGUIST 285","prerequisites":["CS124","CS221","CS224N","CS229"],"cp":[2850,2070],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"161","ref":null,"props":{"keyFromParent":161,"crs_id":"CS230","name":"Deep Learning.","description":"Deep Learning is one of the most highly sought after skills in AI. We will help you become good at Deep Learning. In this course, you will learn the foundations of Deep Learning, understand how to build neural networks, and learn how to lead successful machine learning projects. You will learn about Convolutional networks, RNNs, LSTM, Adam, Dropout, BatchNorm, Xavier/He initialization, and more. You will work on case studies from healthcare, autonomous driving, sign language reading, music generation, and natural language processing. You will master not only the theory, but also see how it is applied in industry. You will practice all these ideas in Python and in TensorFlow, which we will teach. AI is transforming multiple industries. After this course, you will likely find creative ways to apply it to your work. This class is taught in the flipped-classroom format. You will watch videos and complete in-depth programming assignments and online quizzes at home, then come in to class for advanced discussions and work on projects. This class will culminate in an open-ended final project, which the teaching team will help you on. Prerequisites: Familiarity with programming in Python and Linear Algebra (matrix / vector multiplications). CS 229 may be taken concurrently.","prerequisites":["CS229"],"cp":[1650,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"176","ref":null,"props":{"keyFromParent":176,"crs_id":"CS231A","name":"Computer Vision: From 3D Reconstruction to Recognition.","description":"(Formerly 223B) An introduction to the concepts and applications in computer vision. Topics include: cameras and projection models, low-level image processing methods such as filtering and edge detection; mid-level vision topics such as segmentation and clustering; shape reconstruction from stereo, as well as high-level vision tasks such as object recognition, scene recognition, face detection and human motion categorization. Prerequisites: linear algebra, basic probability and statistics.","prerequisites":[""],"cp":[2250,2430],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"163","ref":null,"props":{"keyFromParent":163,"crs_id":"CS231N","name":"Convolutional Neural Networks for Visual Recognition.","description":"Computer Vision has become ubiquitous in our society, with applications in search, image understanding, apps, mapping, medicine, drones, and self-driving cars. Core to many of these applications are visual recognition tasks such as image classification and object detection. Recent developments in neural network approaches have greatly advanced the performance of these state-of-the-art visual recognition systems. This course is a deep dive into details of neural-network based deep learning methods for computer vision. During this course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. We will cover learning algorithms, neural network architectures, and practical engineering tricks for training and fine-tuning networks for visual recognition tasks. Prerequisites: Proficiency in Python; familiarity with C/C++; CS 131 and CS 229 or equivalents; MATH 21 or equivalent, linear algebra.","prerequisites":["CS131","CS229","MATH21"],"cp":[2250,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"187","ref":null,"props":{"keyFromParent":187,"crs_id":"CS232","name":"Digital Image Processing.","description":"Image sampling and quantization color, point operations, segmentation, morphological image processing, linear image filtering and correlation, image transforms, eigenimages, multiresolution image processing, noise reduction and restoration, feature extraction and recognition tasks, image registration. Emphasis is on the general principles of image processing. Students learn to apply material by implementing and investigating image processing algorithms in Matlab and optionally on Android mobile devices. Term project. Recommended: EE261, EE278.Same as: EE 368","prerequisites":[""],"cp":[1650,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"162","ref":null,"props":{"keyFromParent":162,"crs_id":"CS234","name":"Reinforcement Learning.","description":"To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.","prerequisites":["CS229"],"cp":[1950,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"156","ref":null,"props":{"keyFromParent":156,"crs_id":"CS235","name":"Computational Methods for Biomedical Image Analysis and Interpretation.","description":"The latest biological and medical imaging modalities and their applications in research and medicine. Focus is on computational analytic and interpretive approaches to optimize extraction and use of biological and clinical imaging data for diagnostic and therapeutic translational medical applications. Topics include major image databases, fundamental methods in image processing and quantitative extraction of image features, structured recording of image information including semantic features and ontologies, indexing, search and content-based image retrieval. Case studies include linking image data to genomic, phenotypic and clinical data, developing representations of image phenotypes for use in medical decision support and research applications and the role that biomedical imaging informatics plays in new questions in biomedical science. Includes a project. Enrollment for 3 units requires instructor consent. Prerequisites: programming ability at the level of CS 106A, familiarity with statistics, basic biology. Knowledge of Matlab or Python highly recommended.Same as: BIOMEDIN 260, RAD 260","prerequisites":["CS106A"],"cp":[150,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"173","ref":null,"props":{"keyFromParent":173,"crs_id":"CS236","name":"Deep Generative Models.","description":"Generative models are widely used in many subfields of AI and Machine Learning. Recent advances in parameterizing these models using neural networks, combined with progress in stochastic optimization methods, have enabled scalable modeling of complex, high-dimensional data including images, text, and speech. In this course, we will study the probabilistic foundations and learning algorithms for deep generative models, including Variational Autoencoders (VAE), Generative Adversarial Networks (GAN), and flow models. The course will also discuss application areas that have benefitted from deep generative models, including computer vision, speech and natural language processing, and reinforcement learning. Prerequisites: Basic knowledge about machine learning from at least one of CS 221, 228, 229 or 230. Students will work with computational and mathematical models and should have a basic knowledge of probabilities and calculus. Proficiency in some programming language, preferably Python, required.","prerequisites":["CS221","CS228","CS229","CS230"],"cp":[1350,2430],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"64","ref":null,"props":{"keyFromParent":64,"crs_id":"CS237A","name":"Principles of Robot Autonomy I.","description":"Basic principles for endowing mobile autonomous robots with perception, planning, and decision-making capabilities. Algorithmic approaches for robot perception, localization, and simultaneous localization and mapping; control of non-linear systems, learning-based control, and robot motion planning; introduction to methodologies for reasoning under uncertainty, e.g., (partially observable) Markov decision processes. Extensive use of the Robot Operating System (ROS) for demonstrations and hands-on activities. Prerequisites: CS 106A or equivalent, CME 100 or equivalent (for linear algebra), and CME 106 or equivalent (for probability theory).Same as: AA 174A, AA 274A, EE 260A","prerequisites":["CS106A","CME100","CME106"],"cp":[3750,810],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"77","ref":null,"props":{"keyFromParent":77,"crs_id":"CS237B","name":"Principles of Robot Autonomy II.","description":"This course teaches advanced principles for endowing mobile autonomous robots with capabilities to autonomously learn new skills and to physically interact with the environment and with humans. It also provides an overview of different robot system architectures. Concepts that will be covered in the course are: Reinforcement Learning and its relationship to optimal control, contact and dynamics models for prehensile and non-prehensile robot manipulation, imitation learning and human intent inference, as well as different system architectures and their verification. Students will earn the theoretical foundations for these concepts and implementnthem on mobile manipulation platforms. In homeworks, the Robot Operating System (ROS) will be used extensively for demonstrations and hands-on activities. Prerequisites: CS106A or equivalent, CME 100 or equivalent (for linear algebra), CME 106 or equivalent (for probability theory), and AA 171/274.Same as: AA 174B, AA 274B, EE 260B","prerequisites":["CS106A","CME100","CME106","AA171","AA274"],"cp":[3750,990],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"191","ref":null,"props":{"keyFromParent":191,"crs_id":"CS238","name":"Decision Making under Uncertainty.","description":"This course is designed to increase awareness and appreciation for why uncertainty matters, particularly for aerospace applications. Introduces decision making under uncertainty from a computational perspective and provides an overview of the necessary tools for building autonomous and decision-support systems. Following an introduction to probabilistic models and decision theory, the course will cover computational methods for solving decision problems with stochastic dynamics, model uncertainty, and imperfect state information. Topics include: Bayesian networks, influence diagrams, dynamic programming, reinforcement learning, and partially observable Markov decision processes. Applications cover: air traffic control, aviation surveillance systems, autonomous vehicles, and robotic planetary exploration. Prerequisites: basic probability and fluency in a high-level programming language.Same as: AA 228","prerequisites":[""],"cp":[2850,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"117","ref":null,"props":{"keyFromParent":117,"crs_id":"CS240","name":"Advanced Topics in Operating Systems.","description":"Recent research. Classic and new papers. Topics: virtual memory management, synchronization and communication, file systems, protection and security, operating system extension techniques, fault tolerance, and the history and experience of systems programming. Prerequisite: 140 or equivalent.","prerequisites":["CS140"],"cp":[150,1710],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"112","ref":null,"props":{"keyFromParent":"112","crs_id":"CS244","name":"Advanced Topics in Networking.","description":"Classic papers, new ideas, and research papers in networking. Architectural principles: why the Internet was designed this way? Congestion control. Wireless and mobility; software-defined networks (SDN) and network virtualization; content distribution networks; packet switching; data-center networks. Prerequisite: 144 or equivalent.","prerequisites":["CS144"],"cp":[2550,1530],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"78","ref":null,"props":{"keyFromParent":"78","crs_id":"CS244B","name":"Distributed Systems.","description":"Distributed operating systems and applications issues, emphasizing high-level protocols and distributed state sharing as the key technologies. Topics: distributed shared memory, object-oriented distributed system design, distributed directory services, atomic transactions and time synchronization, application-sufficient consistency, file access, process scheduling, process migration, and storage/communication abstractions on distribution, scale, robustness in the face of failure, and security. Prerequisites: CS 144.","prerequisites":["CS144"],"cp":[150,1170],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"44","ref":null,"props":{"keyFromParent":44,"crs_id":"CS245","name":"Principles of Data-Intensive Systems.","description":"Most important computer applications have to reliably manage and manipulate datasets. This course covers the architecture of modern data storage and processing systems, including relational databases, cluster computing frameworks, streaming systems and machine learning systems. Topics include storage management, query optimization, transactions, concurrency, fault recovery, and parallel processing, with a focus on the key design ideas shared across many types of data-intensive systems. Prerequisites: CS 145, 161.","prerequisites":["CS145","CS161"],"cp":[1650,630],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"131","ref":null,"props":{"keyFromParent":131,"crs_id":"CS247G","name":"Introduction to Game Design.","description":"A project-based course that builds on the introduction to design in CS147 by focusing on advanced methods and tools for research, prototyping, and user interface design. Studio based format with intensive coaching and iteration to prepare students for tackling real world design problems. This course takes place entirely in studios; please plan on attending every studio to take this class. nThe focus of CS247g is an introduction to theory and practice of the design of games. We will make digital and paper games, do rapid iteration and run user research studies appropriate to game design. This class has multiple short projects, allowing us to cover a variety of genres, from narrative to pure strategy. Prerequisites: 147 or equivalent background.","prerequisites":["CS147"],"cp":[450,1890],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"140","ref":null,"props":{"keyFromParent":140,"crs_id":"CS248","name":"Interactive Computer Graphics.","description":"This course provides a comprehensive introduction to interactive computer graphics, focusing on fundamental concepts and techniques, as well as their cross-cutting relationship to multiple problem domains in interactive graphics (such as rendering, animation, geometry, image processing). Topics include: 2D and 3D drawing, sampling theory, interpolation, rasterization, image compositing, the real-time GPU graphics pipeline (and parallel rendering), VR rendering, geometric transformations, curves and surfaces, geometric data structures, subdivision, meshing, spatial hierarchies, image processing, time integration, physically-based animation, and inverse kinematics. The course will involve several in-depth programming assignments and a self-selected final project that explores concepts covered in the class. Prerequisite: CS 107, MATH 51.","prerequisites":["CS107","MATH51"],"cp":[3150,1890],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"71","ref":null,"props":{"keyFromParent":71,"crs_id":"CS254","name":"Computational Complexity.","description":"An introduction to computational complexity theory. Topics include the P versus NP problem and other major challenges of complexity theory; Space complexity: Savitch's theorem and the Immerman-Szelepscényi theorem; P, NP, coNP, and the polynomial hierarchy; The power of randomness in computation; Non-uniform computation and circuit complexity; Interactive proofs. Prerequisites: 154 or equivalent; mathematical maturity.","prerequisites":["CS154"],"cp":[1950,990],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"172","ref":null,"props":{"keyFromParent":172,"crs_id":"CS255","name":"Introduction to Cryptography.","description":"For advanced undergraduates and graduate students. Theory and practice of cryptographic techniques used in computer security. Topics: encryption (symmetric and public key), digital signatures, data integrity, authentication, key management, PKI, zero-knowledge protocols, and real-world applications. Prerequisite: basic probability theory.","prerequisites":[""],"cp":[1050,2430],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"101","ref":null,"props":{"keyFromParent":"101","crs_id":"CS257","name":"Logic and Artificial Intelligence.","description":"This is a course at the intersection of philosophical logic and artificial intelligence. After reviewing recent work in AI that has leveraged ideas from logic, we will slow down and study in more detail various components of high-level intelligence and the tools that have been designed to capture those components. Specific areas will include: reasoning about belief and action, causality and counterfactuals, legal and normative reasoning, natural language inference, and Turing-complete logical formalisms including (probabilistic) logic programming and lambda calculus. Our main concern will be understanding the logical tools themselves, including their formal properties and how they relate to other tools such as probability and statistics. At the end, students should expect to have learned a lot more about logic, and also to have a sense for how logic has been and can be used in AI applications. Prerequisites: A background in logic, at least at the level of PHIL 151, will be expected. In case a student is willing to put in the extra work to catch up, it may be possible to take the course with background equivalent to PHIL 150 or CS 157. A background in AI, at the level of CS 221, would also be very helpful and will at times be expected. 2 unit option only for PhD students past the second year. Course website: http://web.stanford.edu/class/cs257/.Same as: PHIL 356C","prerequisites":["PHIL151","CS157","CS221"],"cp":[3150,1350],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"86","ref":null,"props":{"keyFromParent":"86","crs_id":"CS261","name":"Optimization and Algorithmic Paradigms.","description":"Algorithms for network optimization: max-flow, min-cost flow, matching, assignment, and min-cut problems. Introduction to linear programming. Use of LP duality for design and analysis of algorithms. Approximation algorithms for NP-complete problems such as Steiner Trees, Traveling Salesman, and scheduling problems. Randomized algorithms. Introduction to sub-linear algorithms and decision making under uncertainty. Prerequisite: 161 or equivalent.","prerequisites":["CS161"],"cp":[2550,1170],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"116","ref":null,"props":{"keyFromParent":116,"crs_id":"CS326","name":"Topics in Advanced Robotic Manipulation.","description":"This course provides a survey of the most important and influential concepts in autonomous robotic manipulation. It includes classical concepts that are still widely used and recent approaches that have changed the way we look autonomous manipulation. We cover approaches towards motion planning and control using visual and tactile perception as well as machine learning. This course is especially concerned with new approaches for overcoming challenges in generalization from experience, exploration of the environment, and learning representation so that these methods can scale to real problems. Students are expected to present one paper in a tutorial, debate a paper once from the Pro and once from the Con side. They are also expected to propose an original research project and work on it towards a research paper. Recommended: CS 131, 223A, 229 or equivalents.","prerequisites":[""],"cp":[3750,1530],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"103","ref":null,"props":{"keyFromParent":"103","crs_id":"CS327A","name":"Advanced Robotic Manipulation.","description":"Advanced control methodologies and novel design techniques for complex human-like robotic and bio mechanical systems. Class covers the fundamentals in operational space dynamics and control, elastic planning, human motion synthesis. Topics include redundancy, inertial properties, haptics, simulation, robot cooperation, mobile manipulation, human-friendly robot design, humanoids and whole-body control. Additional topcs in emerging areas are presented by groups of students at the end-of-quarter mini-symposium. Prerequisites: 223A or equivalent.","prerequisites":["CS223A"],"cp":[3750,1350],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"174","ref":null,"props":{"keyFromParent":174,"crs_id":"CS329","name":"Topics in Artificial Intelligence.","description":"Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit.","prerequisites":[""],"cp":[1650,2430],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"158","ref":null,"props":{"keyFromParent":158,"crs_id":"CS275","name":"Translational Bioinformatics.","description":"Computational methods for the translation of biomedical data into diagnostic, prognostic, and therapeutic applications in medicine. Topics: multi-scale omics data generation and analysis, utility and limitations of public biomedical resources, machine learning and data mining, issues and opportunities in drug discovery, and mobile/digital health solutions. Case studies and course project. Prerequisites: programming ability at the level of CS 106A and familiarity with biology and statistics.Same as: BIOE 217, BIOMEDIN 217, GENE 217","prerequisites":["CS106A"],"cp":[750,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"91","ref":null,"props":{"keyFromParent":"91","crs_id":"CS276","name":"Information Retrieval and Web Search.","description":"Text information retrieval systems; efficient text indexing; Boolean, vector space, and probabilistic retrieval models; ranking and rank aggregation; evaluating IR systems; text clustering and classification; Web search engines including crawling and indexing, link-based algorithms, web metadata, and question answering; distributed word representations. Prerequisites: CS 107, CS 109, CS 161.Same as: LINGUIST 286","prerequisites":["CS107","CS109","CS161"],"cp":[150,1350],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"160","ref":null,"props":{"keyFromParent":160,"crs_id":"CS330","name":"Deep Multi-task and Meta Learning.","description":"While deep learning has achieved remarkable success in supervised and reinforcement learning problems, such as image classification, speech recognition, and game playing, these models are, to a large degree, specialized for the single task they are trained for. This course will cover the setting where there are multiple tasks to be solved, and study how the structure arising from multiple tasks can benleveraged to learn more efficiently or effectively. This includes: goal-conditioned reinforcement learning techniques that leverage the structure of the provided goal space to learn many tasks significantly faster; meta-learning methods that aim to learn efficient learning algorithms that can learn new tasks quickly; curriculum and lifelong learning, where the problem requires learning a sequence of tasks, leveraging their shared structure to enable knowledge transfer. This is a graduate-level course. By the end of the course, students should be able to understand andnimplement the state-of-the-art multi-task learning algorithms and be ready to conduct research on these topics. Prerequisites: CS 229 or equivalent. Familiarity with deep learning, reinforcement learning, and machine learning is assumed.","prerequisites":["CS229"],"cp":[1350,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"184","ref":null,"props":{"keyFromParent":184,"crs_id":"CS334A","name":"Convex Optimization I.","description":"Convex sets, functions, and optimization problems. The basics of convex analysis and theory of convex programming: optimality conditions, duality theory, theorems of alternative, and applications. Least-squares, linear and quadratic programs, semidefinite programming, and geometric programming. Numerical algorithms for smooth and equality constrained problems; interior-point methods for inequality constrained problems. Applications to signal processing, communications, control, analog and digital circuit design, computational geometry, statistics, machine learning, and mechanical engineering. Prerequisite: linear algebra such as EE263, basic probability.Same as: CME 364A, EE 364A","prerequisites":["EE263"],"cp":[750,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"129","ref":null,"props":{"keyFromParent":129,"crs_id":"CS336","name":"Robot Perception and Decision-Making: Optimal and Learning-based Approaches.","description":"How can robots perceive the world and their own motion so that they can accomplish navigation and manipulation tasks? In this course, we will study how this question has been approached specifically if the robot is equipped with visual sensing capabilities. We focus on studying how a robot can make decisions based on raw, high-dimensional sensory data that represents only partial, noisy observations of the environment. Therefore, the course is divided into two main themes (i) Estimation and (ii) Decision-Making and Control where in each theme we will study traditional approaches, learning-based methods and combinations of those. Prerequisites: CS106B, MATH 51 or CME 100, CS109, CS 221 or CS 229.","prerequisites":["CS106B","MATH51","CME100","CS109","CS221","CS229"],"cp":[3750,1710],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"190","ref":null,"props":{"keyFromParent":190,"crs_id":"CS428","name":"Computation and Cognition: The Probabilistic Approach.","description":"This course will introduce the probabilistic approach to cognitive science, in which learning and reasoning are understood as inference in complex probabilistic models. Examples will be drawn from areas including concept learning, causal reasoning, social cognition, and language understanding. Formal modeling ideas and techniques will be discussed in concert with relevant empirical phenomena.Same as: PSYCH 204","prerequisites":[""],"cp":[2550,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"157","ref":null,"props":{"keyFromParent":157,"crs_id":"CS371","name":"Computational Biology in Four Dimensions.","description":"Cutting-edge research on computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules, cells, and everything in between. These techniques, which draw on approaches ranging from physics-based simulation to machine learning, play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology. Course is devoted primarily to reading, presentation, discussion, and critique of papers describing important recent research developments. Prerequisite: CS 106A or equivalent, and an introductory course in biology or biochemistry. Recommended: some experience in mathematical modeling (does not need to be a formal course).Same as: BIOMEDIN 371, BIOPHYS 371, CME 371","prerequisites":["CS106A"],"cp":[450,2250],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"130","ref":null,"props":{"keyFromParent":130,"crs_id":"CS377","name":"Topics in Human-Computer Interaction.","description":"Contents change each quarter. May be repeated for credit. See http://hci.stanford.edu/academics for offerings.","prerequisites":[""],"cp":[150,1890],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"8","ref":null,"props":{"keyFromParent":"8","crs_id":"MATH19","name":"Calculus.","description":"Introduction to differential calculus of functions of one variable. Review of elementary functions (including exponentials and logarithms), limits, rates of change, the derivative and its properties, applications of the derivative. Prerequisites: trigonometry, advanced algebra, and analysis of elementary functions (including exponentials and logarithms). You must have taken the math placement diagnostic (offered through the Math Department website) in order to register for this course.","prerequisites":[""],"cp":[2550,90],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"22","ref":null,"props":{"keyFromParent":22,"crs_id":"MATH51","name":"Linear Algebra, Multivariable Calculus, and Modern Applications.","description":"This course provides unified coverage of linear algebra and multivariable differential calculus. It discusses applications connecting the material to many quantitative fields. Linear algebra in large dimensions underlies the scientific, data-driven, and computational tasks of the 21st century. The linear algebra portion of the course includes orthogonality, linear independence, matrix algebra, and eigenvalues as well as ubiquitious applications: least squares, linear regression, Markov chains (relevant to population dynamics, molecular chemistry, and PageRank), singular value decomposition (essential in image compression, topic modeling, and data-intensive work in the natural sciences), and more. The multivariable calculus material includes unconstrained optimization via gradients and Hessians (used for energy minimization in physics and chemistry), constrained optimization (via Lagrange multipliers, crucial in economics), gradient descent and the multivariable Chain Rule (which underlie many machine learning algorithms, such as backpropagation), and Newton's method (a crucial part of how GPS works). The course emphasizes computations alongside an intuitive understanding of key ideas, making students well-prepared for further study of mathematics and its applications to other fields. The widespread use of computers makes it more important, not less, for users of math to understand concepts: in all scientific fields, novel users of quantitative tools in the future will be those who understand ideas and how they fit with applications and examples. This is the only course at Stanford whose syllabus includes nearly all the math background for CS 229, which is why CS 229 and CS 230 specifically recommend it (or other courses resting on it). For frequently asked questions about the differences between MATH 51 and CME 100, see the FAQ on the placement page on the math department website. Prerequisite: 21, 42, or the math placement diagnostic (offered through the Math Department website) in order to register for this course.","prerequisites":["MATH21","MATH42"],"cp":[2850,270],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"21","ref":null,"props":{"keyFromParent":21,"crs_id":"MATH52","name":"Integral Calculus of Several Variables.","description":"Iterated integrals, line and surface integrals, vector analysis with applications to vector potentials and conservative vector fields, physical interpretations. Divergence theorem and the theorems of Green, Gauss, and Stokes. Prerequisite: 51 or equivalents.","prerequisites":["MATH51"],"cp":[2550,270],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"74","ref":null,"props":{"keyFromParent":74,"crs_id":"MATH104","name":"Applied Matrix Theory.","description":"Linear algebra for applications in science and engineering: orthogonality, projections, spectral theory for symmetric matrices, the singular value decomposition, the QR decomposition, least-squares, the condition number of a matrix, algorithms for solving linear systems. MATH 113 offers a more theoretical treatment of linear algebra. MATH 104 and EE 103/CME 103 cover complementary topics in applied linear algebra. The focus of MATH 104 is on algorithms and concepts; the focus of EE 103 is on a few linear algebra concepts, and many applications. Prerequisites: MATH 51 and programming experience on par with CS 106.","prerequisites":["MATH51","CS106"],"cp":[2850,990],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"188","ref":null,"props":{"keyFromParent":188,"crs_id":"CS476A","name":"Music, Computing, Design I: The Art of Design.","description":"Creative design for computer music software. Programming, audiovisual design, as well as software design for musical tools, instruments, toys, and games. Provides paradigms and strategies for designing and building music software, with emphases on interactive systems, aesthetics, and artful product design. Course work includes several programming assignments and a \"design+implement\" final project. Prerequisite: experience in C/C++ and/or Java.See https://ccrma.stanford.edu/courses/256a/.Same as: MUSIC 256A","prerequisites":[""],"cp":[1950,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"9","ref":null,"props":{"keyFromParent":9,"crs_id":"MATH113","name":"Linear Algebra and Matrix Theory.","description":"Algebraic properties of matrices and their interpretation in geometric terms. The relationship between the algebraic and geometric points of view and matters fundamental to the study and solution of linear equations. Topics: linear equations, vector spaces, linear dependence, bases and coordinate systems; linear transformations and matrices; similarity; eigenvectors and eigenvalues; diagonalization. (MATH 104 offers a more application-oriented treatment.).","prerequisites":[""],"cp":[2850,90],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"34","ref":null,"props":{"keyFromParent":34,"crs_id":"STATS116","name":"Theory of Probability.","description":"Probability spaces as models for phenomena with statistical regularity. Discrete spaces (binomial, hypergeometric, Poisson). Continuous spaces (normal, exponential) and densities. Random variables, expectation, independence, conditional probability. Introduction to the laws of large numbers and central limit theorem. Prerequisites: MATH 52 and familiarity with infinite series, or equivalent.","prerequisites":["MATH52"],"cp":[2550,450],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"186","ref":null,"props":{"keyFromParent":186,"crs_id":"STATS216","name":"Introduction to Statistical Learning.","description":"Overview of supervised learning, with a focus on regression and classification methods. Syllabus includes: linear and polynomial regression, logistic regression and linear discriminant analysis;cross-validation and the bootstrap, model selection and regularization methods (ridge and lasso); nonlinear models, splines and generalized additive models; tree-based methods, random forests and boosting; support-vector machines; Some unsupervised learning: principal components and clustering (k-means and hierarchical). Computing is done in R, through tutorial sessions and homework assignments. This math-light course is offered via video segments (MOOC style), and in-class problem solving sessions. Prereqs: Introductory courses in statistics or probability (e.g., STATS 60 or STATS 101), linear algebra (e.g., MATH 51), and computer programming (e.g., CS 105).","prerequisites":[""],"cp":[1350,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}},{"key":"192","ref":null,"props":{"keyFromParent":192,"crs_id":"STATS315A","name":"Modern Applied Statistics: Learning.","description":"Overview of supervised learning. Linear regression and related methods. Model selection, least angle regression and the lasso, stepwise methods. Classification. Linear discriminant analysis, logistic regression, and support vector machines (SVMs). Basis expansions, splines and regularization. Kernel methods. Generalized additive models. Kernel smoothing. Gaussian mixtures and the EM algorithm. Model assessment and selection: crossvalidation and the bootstrap. Pathwise coordinate descent. Sparse graphical models. Prerequisites: STATS 305, 306A,B or consent of instructor.","prerequisites":["STATS305","STATS306A","STATS306B"],"cp":[3150,2610],"offset":80,"display":"none"},"_owner":null,"_store":{}}],"map":{"3":"CS106A","8":"MATH19","9":"MATH113","13":"CS109","15":"CS106X","16":"CS106B","21":"MATH52","22":"MATH51","23":"CS157","27":"CS107E","32":"CS151","34":"STATS116","40":"CS107","42":"CS145","44":"CS245","47":"CS161","53":"CS110","54":"CS155","56":"CS103","64":"CS237A","66":"CS140","70":"CS154","71":"CS254","74":"MATH104","77":"CS237B","78":"CS244B","85":"CS144","86":"CS261","90":"CS223A","91":"CS276","95":"CS221","100":"CS205L","101":"CS257","103":"CS327A","111":"CS124","112":"CS244","116":"CS326","117":"CS240","118":"CS147","119":"CS108","120":"CS228","122":"CS229","129":"CS336","130":"CS377","131":"CS247G","140":"CS248","141":"CS148","150":"CS131","151":"CS224N","152":"CS224S","156":"CS235","157":"CS371","158":"CS275","159":"CS227B","160":"CS330","161":"CS230","162":"CS234","163":"CS231N","164":"CS224U","172":"CS255","173":"CS236","174":"CS329","176":"CS231A","184":"CS334A","185":"CS149","186":"STATS216","187":"CS232","188":"CS476A","189":"CS224W","190":"CS428","191":"CS238","192":"STATS315A"}}